{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-12T23:55:26.758Z",
    "end": "2022-06-12T23:55:27.017Z",
    "duration": 259,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "22cd1cfa-667f-4291-bf03-a1bf2b5c2f40",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed9975d8-71b2-4f6f-8793-29b293b43933",
          "title": "Test 1: valida que el string este invertido",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida que la cadena esta invertida ",
              "fullTitle": "Test 1: valida que el string este invertido valida que la cadena esta invertida ",
              "timedOut": false,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(url)\n    .get('/')\n    .query({ text: \"test\" })//cadena de entrada\n    .end(function (req, res,err) {\n        //verifica que la respuesta a la peticion es 200\n        expect(res.statusCode).to.be.equal(200);\n        // expect('Content_Type', );\n        expect('Content_Type', /json/);\n        //verifica que la salida esperada sea la correcta con valor de prueba\n        expect(res.body).to.have.property('text').to.be.equal(\"tset\");\n        if (err) return done(err);\n        return done();\n    });",
              "err": {},
              "uuid": "f08c0c05-09ea-41da-8b32-25e27e8ae671",
              "parentUUID": "ed9975d8-71b2-4f6f-8793-29b293b43933",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": ["f08c0c05-09ea-41da-8b32-25e27e8ae671"],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 167,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "21e41c46-67ce-4d3c-8fb7-ed2391b784db",
          "title": "Test 2 : valida que se muestre el flag de palindrome ",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida que se cumpla el flag de palindrome",
              "fullTitle": "Test 2 : valida que se muestre el flag de palindrome  valida que se cumpla el flag de palindrome",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(url)\n    .get('/')\n    .query({ text: \"kayak\" })\n    .end(function (err, res) {\n        //verifica que la respuesta a la peticion es 200\n        expect(res.status).to.be.equal(200);\n        //verifica que la palbara es palindrome\n        expect(res.body).to.have.property('palindrome').to.be.equal(true);\n        done();\n        \n    });",
              "err": {},
              "uuid": "dd57518d-e9db-446d-aaa5-d4173345804a",
              "parentUUID": "21e41c46-67ce-4d3c-8fb7-ed2391b784db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": ["dd57518d-e9db-446d-aaa5-d4173345804a"],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "452a479c-e34c-46a4-bf15-914ccebe25be",
          "title": "Test 3: validar manejo de errores en los parametros ",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida manejo de errores en los parametros",
              "fullTitle": "Test 3: validar manejo de errores en los parametros  valida manejo de errores en los parametros",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(url)\n    .get('/')\n    //in the querys put invalid param, right query ({\"text\":\"test\"})\n    .query({ texto: \"test\" })\n    .end(function (err, res) {\n        //verifica que la respuesta a la peticion es 400 \n        expect(res.status).to.be.equal(400);\n        expect('Content_Type', 'application/json/');\n        //verifica que en caso de ingreso de parametro incorrecto se muestre el mensaje indicado\n        expect(res.body).to.have.property('error').to.be.equal('no text');\n        done();\n    });",
              "err": {},
              "uuid": "956f16a8-1c74-4c01-ae15-1e9683d41011",
              "parentUUID": "452a479c-e34c-46a4-bf15-914ccebe25be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": ["956f16a8-1c74-4c01-ae15-1e9683d41011"],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "93b7c681-9fc0-4735-a244-d345e590e832",
          "title": "Test 4: validar el manejo de error en saltos fuera de la ruta ",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida manejo de error en saltos fuera de la ruta",
              "fullTitle": "Test 4: validar el manejo de error en saltos fuera de la ruta  valida manejo de error en saltos fuera de la ruta",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/**\n * invalid url route\n * @type {string}\n * the right url is: http://localhost:3000/iecho\n */\nconst wrongURL = 'http://localhost:3000/iech';\nrequest(wrongURL)\n    .get('/')\n    .query({ tex: \"test\" })\n    .end(function (err, res) {\n        //verifica que la respuesta a la peticion sea 404\n        expect(res.status).to.eql(404);\n        done();\n    });",
              "err": {},
              "uuid": "316981d1-4181-46a4-98f6-a852a30f7983",
              "parentUUID": "93b7c681-9fc0-4735-a244-d345e590e832",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": ["316981d1-4181-46a4-98f6-a852a30f7983"],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}
