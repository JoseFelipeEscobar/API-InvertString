{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-13T22:11:23.432Z",
    "end": "2022-06-13T22:11:23.529Z",
    "duration": 97,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "73d277ce-ee71-4e84-ac13-16c5ab09dfe4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a4ebed7-328e-43b0-b4bc-5444bdf2c45e",
          "title": "Test 1: valida que el string este invertido",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida que la cadena esta invertida ",
              "fullTitle": "Test 1: valida que el string este invertido valida que la cadena esta invertida ",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(url)\n    .get('/')\n    .query({ text: \"test\" })//cadena de entrada\n    .end(function (req, res,err) {\n        //verifica que la respuesta a la peticion es 200\n        expect(res.statusCode).to.be.equal(200);\n        // expect('Content_Type', );\n        expect('Content_Type', /json/);\n        //verifica que la salida esperada sea la correcta con valor de prueba\n        expect(res.body).to.have.property('text').to.be.equal(\"tset\");\n        if (err) return done(err);\n        return done();\n    });",
              "err": {},
              "uuid": "6b38676f-0fad-49fe-8b1f-7c14d390513c",
              "parentUUID": "8a4ebed7-328e-43b0-b4bc-5444bdf2c45e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b38676f-0fad-49fe-8b1f-7c14d390513c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38caf723-95ff-4331-a053-7b31f18be6a0",
          "title": "Test 2 : valida que se muestre el flag de palindrome ",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida que se cumpla el flag de palindrome",
              "fullTitle": "Test 2 : valida que se muestre el flag de palindrome  valida que se cumpla el flag de palindrome",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(url)\n    .get('/')\n    .query({ text: \"kayak\" })\n    .end(function (err, res) {\n        //verifica que la respuesta a la peticion es 200\n        expect(res.status).to.be.equal(200);\n        //verifica que la palbara es palindrome\n        expect(res.body).to.have.property('palindrome').to.be.equal(true);\n        done();\n        \n    });",
              "err": {},
              "uuid": "bd5643e0-bcaf-454f-bfb0-5bfeabbca451",
              "parentUUID": "38caf723-95ff-4331-a053-7b31f18be6a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd5643e0-bcaf-454f-bfb0-5bfeabbca451"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3afbf64c-ee42-4408-8142-aa074a27e39f",
          "title": "Test 3: validar manejo de errores en los parametros ",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida manejo de errores en los parametros",
              "fullTitle": "Test 3: validar manejo de errores en los parametros  valida manejo de errores en los parametros",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(url)\n    .get('/')\n    //in the querys put invalid param, right query ({\"text\":\"test\"})\n    .query({ texto: \"test\" })\n    .end(function (err, res) {\n        //verifica que la respuesta a la peticion es 400 \n        expect(res.status).to.be.equal(400);\n        expect('Content_Type', 'application/json/');\n        //verifica que en caso de ingreso de parametro incorrecto se muestre el mensaje indicado\n        expect(res.body).to.have.property('error').to.be.equal('no text');\n        done();\n    });",
              "err": {},
              "uuid": "9106a66d-0527-4172-8c36-4fb2409b3e7c",
              "parentUUID": "3afbf64c-ee42-4408-8142-aa074a27e39f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9106a66d-0527-4172-8c36-4fb2409b3e7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "afdbc887-7d51-44a1-b085-627821f0a8f8",
          "title": "Test 4: validar el manejo de error en saltos fuera de la ruta ",
          "fullFile": "C:\\Users\\USUARIO\\Videos\\Talleres de Sofka\\API DEL TRABAJO\\SERVIDOR\\test\\test.spec.js",
          "file": "\\test\\test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida manejo de error en saltos fuera de la ruta",
              "fullTitle": "Test 4: validar el manejo de error en saltos fuera de la ruta  valida manejo de error en saltos fuera de la ruta",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/**\n * invalid url route\n * @type {string}\n * the right url is: http://localhost:3000/iecho\n */\nconst wrongURL = 'http://localhost:3000/iech';\nrequest(wrongURL)\n    .get('/')\n    .query({ tex: \"test\" })\n    .end(function (err, res) {\n        //verifica que la respuesta a la peticion sea 404\n        expect(res.status).to.eql(404);\n        done();\n    });",
              "err": {},
              "uuid": "64cd7b5e-4c69-4b60-b4db-ee70ab344f09",
              "parentUUID": "afdbc887-7d51-44a1-b085-627821f0a8f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64cd7b5e-4c69-4b60-b4db-ee70ab344f09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}